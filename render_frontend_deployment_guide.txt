RENDER FRONTEND DEPLOYMENT GUIDE
================================

‡¶è‡¶á ‡¶ó‡¶æ‡¶á‡¶°‡ßá ‡¶Ü‡¶™‡¶®‡¶ø Render-‡¶è frontend upload ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ process ‡¶¶‡ßá‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶¨‡ßá‡¶®‡•§

PREREQUISITES
-------------
1. Render account (https://render.com)
2. GitHub repository with frontend code
3. Node.js project setup

STEP-BY-STEP PROCESS
====================

STEP 1: PREPARE FRONTEND FOR RENDER
-----------------------------------

1.1 Create render.yaml file in frontend directory:
```yaml
services:
  - type: web
    name: meta-betties-frontend
    env: node
    buildCommand: npm install && npm run build
    startCommand: npm start
    envVars:
      - key: REACT_APP_API_URL
        value: https://api-server-wcjc.onrender.com
    healthCheckPath: /
    autoDeploy: true
```

1.2 Update package.json scripts:
```json
{
  "scripts": {
    "start": "serve -s build -l $PORT",
    "build": "react-scripts build",
    "dev": "react-scripts start"
  }
}
```

1.3 Install serve package:
```bash
cd frontend
npm install serve
```

STEP 2: CREATE RENDER ACCOUNT
-----------------------------

2.1 Go to https://render.com
2.2 Sign up with GitHub account
2.3 Verify your email

STEP 3: CONNECT GITHUB REPOSITORY
---------------------------------

3.1 In Render Dashboard:
   - Click "New +"
   - Select "Web Service"
   - Connect your GitHub account
   - Select your repository

3.2 Configure Repository:
   - Repository: your-repo-name
   - Branch: main
   - Root Directory: frontend (if frontend is in subdirectory)

STEP 4: CONFIGURE DEPLOYMENT SETTINGS
-------------------------------------

4.1 Basic Settings:
   - Name: meta-betties-frontend
   - Environment: Node
   - Region: Choose closest to your users
   - Branch: main

4.2 Build Settings:
   - Build Command: npm install && npm run build
   - Start Command: npm start
   - Root Directory: frontend (if applicable)

4.3 Environment Variables:
   - REACT_APP_API_URL = https://api-server-wcjc.onrender.com

STEP 5: ADVANCED SETTINGS
-------------------------

5.1 Health Check:
   - Health Check Path: /
   - Health Check Timeout: 180

5.2 Auto-Deploy:
   - Enable: Yes
   - Deploy on Push: Yes

STEP 6: DEPLOY
--------------

6.1 Click "Create Web Service"
6.2 Wait for build to complete
6.3 Check deployment logs

STEP 7: VERIFY DEPLOYMENT
-------------------------

7.1 Test your frontend URL
7.2 Check if API calls work
7.3 Test wallet connections

ALTERNATIVE METHOD: MANUAL DEPLOYMENT
=====================================

If you prefer manual setup:

1. Go to Render Dashboard
2. Click "New +" ‚Üí "Web Service"
3. Connect GitHub repository
4. Configure manually:

   Name: meta-betties-frontend
   Environment: Node
   Build Command: npm install && npm run build
   Start Command: npm start
   Root Directory: frontend

5. Add Environment Variables:
   - Key: REACT_APP_API_URL
   - Value: https://api-server-wcjc.onrender.com

6. Click "Create Web Service"

TROUBLESHOOTING
===============

Problem 1: Build fails
Solution:
- Check package.json has correct scripts
- Verify all dependencies are installed
- Check build logs for errors

Problem 2: Frontend can't connect to API
Solution:
- Verify REACT_APP_API_URL is set correctly
- Check API server is running
- Test API endpoint directly

Problem 3: Static files not loading
Solution:
- Add serve package: npm install serve
- Update start script: "start": "serve -s build -l $PORT"

Problem 4: Environment variables not loading
Solution:
- Make sure variable names start with REACT_APP_
- Restart deployment after adding variables
- Check variable names are correct

USEFUL COMMANDS
===============

Test API connection:
curl https://api-server-wcjc.onrender.com/api/config

Test frontend locally:
cd frontend
npm install
npm run build
npm start

Check deployment logs:
- Go to Render Dashboard
- Click on your service
- Go to "Logs" tab

UPDATE FRONTEND URL IN BOT
==========================

After deployment, update bot verification link:

1. Get your frontend URL from Render
2. Edit bot-server/bot.py line 98:
```python
verify_link = f"https://your-frontend-url.onrender.com?tg_id={user_id}"
```

3. Replace "your-frontend-url.onrender.com" with your actual URL

FINAL CHECKLIST
===============

‚ñ° Frontend builds successfully
‚ñ° Environment variables set correctly
‚ñ° API connection works
‚ñ° Wallet connections work
‚ñ° Bot verification link updated
‚ñ° Health check passes
‚ñ° Auto-deploy enabled

Your frontend should now be live on Render! üöÄ 